name: Deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Verify and deploy enviroment variables
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOYMENT_HOST }}
          username: ${{ secrets.DEPLOYMENT_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "${ secrets.ENV_VARS_JSON }" > env_vars.json
            if ! jq -e '. | type == "object" and all(.[] | type == "string")' env_vars.json > /dev/null; then
              echo "Invalid JSON format or not all values are strings"
              exit 1
            fi
            jq -r 'to_entries | .key + "=" + .value' env_vars.json > /home/${{ secrets.DEPLOYMENT_USER }}/ratwork_mechanism_bot/.env
            rm env_vars.json
            echo "Environment variables set successfully"

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOYMENT_HOST }}
          username: ${{ secrets.DEPLOYMENT_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            DEPLOY_USER="${{ secrets.DEPLOYMENT_USER }}"
            cd /home/${DEPLOY_USER}/ratwork_mechanism_bot
            OLD_REVISION=$(git rev-parse HEAD)
            git pull --rebase origin main
            NEW_REVISION=$(git rev-parse HEAD)
            if [ "$OLD_REVISION" != "$NEW_REVISION" ]; then
              if git diff --name-only "$OLD_REVISION" "$NEW_REVISION" | grep -q "^requirements.txt$"; then
                echo "requirements.txt changed, reinstalling dependencies"
                /home/${DEPLOY_USER}/ratwork_mechanism_bot/venv/bin/pip install -r requirements.txt
              fi
              sudo systemctl restart ratwork.service
            fi
